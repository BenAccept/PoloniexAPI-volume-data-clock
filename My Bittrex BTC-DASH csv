#Definition of DASH-CSV
#Import the networking packages if it is an API and the packages if it's a CSV
#Calculate DASH-CSV
#Calculate DASH-CSV
#Build printout

#Correct import
import csv
import operator
#Definition of DASH-CSV
sample = open('BTC-DASH.csv','r')
sort = sorted(csv1, key=operator.itemgetter(0))
csv1 = csv.reader(sample,delimiter=',')
for eachline in sort:
    print eachline
    
class subsetDelimitersuniversebreaker(operator):
    number_of_delimiters = 9 #because we have nine subsets. I could make the class a concatenated string panda list subset
    operator.closed_date
    operator.opened_date
    operator.market
    operator.type
    operator.bid_ask
    operator.unites_filled_DASH
    operator.unites_total_DASH
    operator.actual_rate
    operator.cost_proceeds

#make an area and insert the correct delimiter area
#example and build printout| be print(x[1], x[9]) str()
#I should replace a list before I maybe print

class metasubset():
    csvnums = [ cost_proceeds, actual_rate, unites_total_DASH, unites_filled_DASH, bid_ask, type, market, opened_date, closed_date ]

#Build printout
csvnums[0] = str("CSV total: ")
csvnums[1] = str("CSV maker taker fee: ")
csvnums[2] = str("CSV total unites of DASH: ")
csvnums[3] = str("CSV filled DASH: ")
csvnums[4] = str("CSV DASH buy or sell price: ")
csvnums[5] = str("CSV buy or sell: ")
csvnums[6] = str("CSV what crypto scale: ")
csvnums[7] = str("CSV when did I open a market: ")
csvnums[8] = str("CSV when and how long I held the market: ")

Class metasubset2():
    strings = []

print(csvkeys.eachline)

print(csv_keys[printout1::printout9])

for x in csvnums:
    print(csv_keys[printout1::printout9])

#Definition of DASH-CSV


#Calculate DASH-CSV

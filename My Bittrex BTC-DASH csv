#Definition of DASH-CSV
#Import the networking packages if it is an API and the packages if it's a CSV
#Calculate DASH-CSV
#Calculate DASH-CSV
#Build printout

#Correct import, creates array
import csv
import time
#Definition of DASH-CSV
sample = open('BTC-DASH.csv','r')
sort = sorted(csv1, key=operator.itemgetter(0))
csv1 = csv.reader(sample,delimiter=',')
for eachline in sort:
    print eachline

#make an area and insert the correct delimiter area
#example and build printout| be print(x[1], x[9]) str()
#I should replace a list before I maybe print
#go to subset list

class metasubset(x):
    x = {}
    csvnums = [ cost_proceeds, 
                actual_rate, 
                unites_total_DASH, 
                unites_filled_DASH, 
                bid_ask, 
                type, 
                market, 
                opened_date, 
                closed_date ]
    
    x = csvnums * x.[0] + x.[1] + x.[4] + x.[5] + x.[6] + x.[7] + x.[8] # = 0
    metasubset[0:2:4:8]
    cost / proceeds * actual rate * bid / ask * type * market #including ending timestamp = fee but 1 satoshi bid/ask
    [] + [] + [7] + [8] = x #probably an if statement but its a 'meta' class and now a master i think looking to pass a library
    x = metasubset({}.format())
    

#Build printout, creates array
csvnums[0] = str("CSV total: ")
csvnums[1] = str("CSV maker taker fee: ")
csvnums[2] = str("CSV total unites: ")
csvnums[3] = str("CSV filled: ")
csvnums[4] = str("CSV buy or sell price: ")
csvnums[5] = str("CSV buy or sell: ")
csvnums[6] = str("CSV what crypto: ")
csvnums[7] = str("CSV when did I open a market: ")
csvnums[8] = str("CSV when and how long I held the market: ")

Class metasubsetstrings():
    strings = []

#creates array
print(csvkeys.eachline)

#creates array
print(csv_keys[printout1::printout9])

#creates array
for x in csvnums:
    print(csv_keys[printout1::printout9])

#Definition of DASH-CSV, creates array
CSV_total
CSV_maker_taker_fee
CSV_total_unites_of_DASH
CSV_filled_DASH
CSV_DASH_buy_or_sell_price
CSV_buy_or_sell
CSV_what_crypto_scale
CSV_when_did_I_open_a_market
CSV_when_and_how_long_I_held_the_market

#Calculate DASH-CSV, creates array
